// Generated by LiveScript 1.2.0
(function(){
  var Selection, exports;
  Selection = (function(){
    Selection.displayName = 'Selection';
    var prototype = Selection.prototype, constructor = Selection;
    function Selection(buffer, x, y, length){
      var this$ = this instanceof ctor$ ? this : new ctor$;
      this$.buffer = buffer;
      this$.x = x;
      this$.y = y;
      this$.length = length != null ? length : 0;
      this$['delete'] = bind$(this$, 'delete', prototype);
      this$.insert = bind$(this$, 'insert', prototype);
      return this$;
    } function ctor$(){} ctor$.prototype = prototype;
    prototype.insert = function(text){
      var ref$;
      if (this.length > 0) {
        this['delete'](this.length);
      }
      this.buffer.insert(this.x, this.y, text);
      ref$ = this.buffer.offsetPos(this.x, this.y, text.length), this.x = ref$[0], this.y = ref$[1];
      return this;
    };
    prototype['delete'] = function(length){
      var ref$;
      if (this.length > 0) {
        this['delete'](this.length);
      }
      this.buffer['delete'](this.x, this.y, length);
      ref$ = this.buffer.offsetPos(this.x, this.y, length), this.x = ref$[0], this.y = ref$[1];
      return this;
    };
    return Selection;
  }());
  exports = module.exports = Selection;
  function bind$(obj, key, target){
    return function(){ return (target || obj)[key].apply(obj, arguments) };
  }
}).call(this);
