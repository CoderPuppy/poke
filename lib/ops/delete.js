// Generated by LiveScript 1.2.0
(function(){
  var OP, DeleteOP, exports;
  OP = require('./');
  DeleteOP = (function(){
    DeleteOP.displayName = 'DeleteOP';
    var prototype = DeleteOP.prototype, constructor = DeleteOP;
    function DeleteOP(x, y, length){
      var this$ = this instanceof ctor$ ? this : new ctor$;
      this$.x = x;
      this$.y = y;
      this$.length = length != null ? length : 1;
      this$.unapply = bind$(this$, 'unapply', prototype);
      this$.apply = bind$(this$, 'apply', prototype);
      if (this$.length === 'all') {
        this$.length = Infinity;
      }
      return this$;
    } function ctor$(){} ctor$.prototype = prototype;
    prototype.apply = function(buffer){
      var ref$, x, y;
      ref$ = buffer._parsePos(this.x, this.y), x = ref$[0], y = ref$[1];
      return [x, y, buffer.deleteImpl(x, y, this.length)];
    };
    prototype.unapply = function(buffer, arg$){
      var x, y, deleted;
      x = arg$[0], y = arg$[1], deleted = arg$[2];
      return buffer.insertImpl(x, y, deleted.split("\n"));
    };
    return DeleteOP;
  }());
  exports = module.exports = DeleteOP;
  function bind$(obj, key, target){
    return function(){ return (target || obj)[key].apply(obj, arguments) };
  }
}).call(this);
